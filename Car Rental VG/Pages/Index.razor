@page "/"
@using Car_Rental.Common.Classes;
@using Car_Rental.Common.Enums;
@using Car_Rental.Common.Interfaces;
@using Car_Rental.Business.Classes;
@inject BookingProcessor bp;
<PageTitle>Car Rental Assignment - VG</PageTitle>
<h1 style="margin-left : -1%">Car Rental Assignment - VG</h1>
@*OM b.Message INTE är tomt så visas ett felmeddelande i gränsnittet
  som är bundet till en specifikt inläst bokning från SeedData metoden. *@
@foreach (var b in bp.GetBookings())
{
	@if (b.Message.Length > 0)
	{
		<div class="alert alert-danger" role="alert" style="width : 70% ;margin-left : -1%">
			<strong>Error!</strong> @b.Message
		</div>
	}
}
@*OM bp.Message INTE är tomt så visas ett felmeddelande i gränsnittet
  som är bundet till en specifik bokning, fordon eller kund.. *@
@if (bp.Message.Length > 0)
{
	<div class="alert alert-danger" role="alert" style="width : 40% ;margin-left : -1%">
		<strong>Error!</strong> @bp.Message
	</div>
}
@*Tabell för fordon*@
<div class="row" style="width : 100%; margin-left : -1%">	
	<h6 style="margin-left:-0.75%">Vehicles</h6>
	<table class="table table-borderless table-hover">
		<thead>
			<tr>
				<th>RegNo</th>
				<th>Make</th>
				<th>Odometer</th>
				<th>Cost Km</th>
				<th>Vehicle Type</th>
				<th>$ Day</th>
				<th>Action</th>
				<th>Status</th>
			</tr>
		</thead>
		<tbody>
			@if (bp.IsProcessing.Equals(false))
			{
				<tr>
					<td><input size="17.5%" maxlength="6" @bind=bp.RegNo placeholder="RegNo" /> </td>
					<td><input size="17.5%" maxlength="20" @bind=bp.Make placeholder="Make" /> </td>
					<td><input size="17.5%" maxlength="6" @bind=bp.OdoMeter /></td>
					<td><input size="17.5%" maxlength="3" @bind=bp.CostPerKm /></td>
					<td>
						<select class="form-control-sm" @bind="bp.VehicleType">
							@foreach (var vt in bp.VehicleTypeNames)
							{
								<option value="none" selected disabled hidden></option>
								<option> @vt</option>
							}
						</select>
					</td>
					<td><input size="1%" maxlength="3" @bind=bp.CostPerDay> </td>
					<td>
						<button type="button" class="btn btn-light" @onclick="(()
						=> bp.AddVehicle(bp.RegNo,bp.Make, bp.OdoMeter,
						bp.CostPerKm,bp.GetVehicleType(bp.VehicleType), bp.CostPerDay))">
							Add
						</button>
					</td>
					<td>
					</td>
				</tr>
			}
			@if (bp.IsProcessing.Equals(true))
			{
				<tr>
					<td><input size="17.5%" @bind=bp.RegNo disabled placeholder="RegNo" /> </td>
					<td><input size="17.5%" @bind=bp.Make disabled placeholder="Make" /> </td>
					<td><input size="17.5%" @bind=bp.OdoMeter disabled /></td>
					<td><input size="17.5%" @bind=bp.CostPerKm disabled /></td>
					<td>
						<select class="form-control-sm" @bind="bp.VehicleType" disabled>
							@foreach (var vt in bp.VehicleTypeNames)
							{
								<option> @vt</option>
							}
						</select>
					</td>
					<td><input size="1%" @bind=bp.CostPerDay disabled> </td>
					<td>
						<button type="button" class="btn btn-light" disabled>
							Add
						</button>
					</td>
					<td>
						@if (bp.IsProcessing.Equals(true))
						{
							<span class="badge bg-warning"> Processing</span>
						}
					</td>
				</tr>
			}
			@foreach (var v in bp.GetVehicles())
			{
				<tr>
					<td><strong>@v.RegNo</strong> </td>
					<td>@v.Make</td>
					<td>@v.OdoMeter</td>
					<td>@v.CostPerKm</td>
					<td>@v.VehicleType</td>
					<td>@v.CostPerDay</td>

					@if (bp.IsProcessing.Equals(false))
					{
						<td>
							@if (v.VehicleStatus.Equals(bp.GetVehicleStatus(bp.VehicleStatusNames[0])))
							{
								<select class="form-control-sm" @bind="bp.CustomerSSN">
									@foreach (var p in bp.GetPersons())
									{
										<option value="none" selected disabled hidden></option>
										<option value="@p.SSN"> @p</option>
									}
								</select>
								<button class="rent-btn" @onclick="async ()
								=> await bp.RentVehicle(bp.GetVehicle(v.RegNo)!, bp.GetPerson(bp.CustomerSSN)!)">
									Rent
								</button>
							}
							@if (v.VehicleStatus.Equals(bp.GetVehicleStatus(bp.VehicleStatusNames[1])))
							{
								<input size="4%" maxlength="4" placeholder="Distance" @bind="bp.Distance">
								<input size="1.5%" maxlength="3" placeholder="Days" @bind="bp.Days">
								<button type="button" class="btn btn-light" @onclick="(()
									=>
									bp.ReturnVehicle(bp.GetVehicle(v.Id)!,
									bp.Distance, bp.Days))">
									Return
								</button>
							}
						</td>
					}
					@if (bp.IsProcessing.Equals(true))
					{
						<td>
							@if (v.VehicleStatus.Equals(bp.GetVehicleStatus(bp.VehicleStatusNames[0])))
							{
								<select class="form-control-sm" @bind="bp.CustomerSSN" disabled>
									@foreach (var p in bp.GetPersons())
									{
										<option value="@p.SSN"> @p</option>
									}
								</select>
								<button class="rent-btn" disabled>
									Rent
								</button>
							}
							@if (v.VehicleStatus.Equals(bp.GetVehicleStatus(bp.VehicleStatusNames[1])))
							{
								<input size="4%" placeholder="Distance" @bind="bp.Distance" disabled>
								<input size="1.5%" placeholder="Days" @bind="bp.Days" disabled>
								<button type="button" class="btn btn-light" disabled>
									Return
								</button>
							}
						</td>
					}
					<td>
						@if (v.VehicleStatus.Equals(bp.GetVehicleStatus(bp.VehicleStatusNames[0])))
						{
							<span class="badge bg-dark">Available</span>
						}
						@if (v.VehicleStatus.Equals(bp.GetVehicleStatus(bp.VehicleStatusNames[1])))
						{
							<span class="badge bg-danger">Booked</span>
						}
						@if (v.VehicleStatus.Equals(bp.GetVehicleStatus(bp.VehicleStatusNames[2])))
						{
							<span class="badge bg-warning">Unknown</span>
						}
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>
<br />
@*Tabell för bokningar*@
<div class="row" style="width : 75%; margin-left : -1%">
	<h6 style="margin-left : -1%">Bookings</h6>
	<table class="table table-hover">
		<thead>
			<tr>
				<th>RegNo</th>
				<th>Customer</th>
				<th>Km Reneted</th>
				<th>Km Returned</th>
				<th>Reneted</th>
				<th>Returned</th>
				<th>Cost</th>
				<th>Status</th>
				@foreach (var b in bp.GetBookings())
				{
					@if (b.Message.Length > 0)
					{
						<th>Action</th>
					}
				}
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var b in bp.GetBookings())
			{
				<tr>
					<td><strong>@b.RegNo</strong> </td>
					<td>@b.Customer</td>
					<td>@b.KmReneted</td>
					<td>@b.KmReturned</td>
					<td>@b.Reneted.ToString("d")</td>
					<td>
						@if (b.Returned != default)
						{
							@b.Returned.ToString("d")
						}
					</td>
					<td>@b.Cost</td>
					<td>
						@if (b.BookingStatus.Equals(bp.GetBookingStatus(bp.BookingStatusNames[0])))
						{
							<span class="badge bg-pill bg-success">Closed</span>
						}
						@if (b.BookingStatus.Equals(bp.GetBookingStatus(bp.BookingStatusNames[1])))
						{

							<span class="badge bg-pill bg-warning">None</span>
						}
						@if (b.BookingStatus.Equals(bp.GetBookingStatus(bp.BookingStatusNames[2])))
						{
							<span class="badge bg-pill bg-danger">Open</span>
						}
					</td>
					<td>
						@if (b.BookingStatus.Equals(bp.GetBookingStatus(bp.BookingStatusNames[1])))
						{
							<button type="button" style="margin-left: -5%" class="btn btn-warning"
							@onclick="(()
							=> bp.RemoveBooking(bp.GetBooking(b.Id)!))">
								Remove
							</button>
						}
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>
<br />
@*Tabell för kunder*@
<div class="row" style="width : 50%; margin-left : -1%">
	<h6 style="margin-left : -1.5%">Customers</h6>
	<table class="table table-hover">
		<thead>
			<tr>
				<th>SSN</th>
				<th>Last Name</th>
				<th>First Name</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td><input size="17.5%" maxlength="5" @bind="bp.SSN" placeholder="SSN" /></td>
				<td><input size="17.5%" maxlength="14" @bind="bp.LastName" placeholder="Last Name" /></td>
				<td><input size="17.5%" maxlength="10" @bind="bp.FirstName" placeholder="First Name" /></td>
				<td>
					<button type="button" class="btn btn-light" @onclick="(() => bp.AddCustomer(bp.SSN,
				 bp.LastName,bp.FirstName))">
						Add
					</button>
				</td>
			</tr>
			@foreach (var p in bp.GetPersons())
			{
				<tr>
					<td><strong>@p.SSN</strong></td>
					<td>@p.LastName</td>
					<td>@p.FirstName</td>
					<td></td>
				</tr>
			}
		</tbody>
	</table>
</div>